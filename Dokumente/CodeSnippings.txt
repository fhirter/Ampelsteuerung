
    /**
     * createTrafficLights(): Creates on the crossroad.Road the appopriate trafficlights
     *
     *
     * @version 1.0
     * @autor   Schweizer Patrick
     * @date    30.12.2018
     * @arg     traffic_lights.TrafficLight: (Index from traffic_lights.TrafficLight)
     * @return  Node: Index from the traffic_lights.TrafficLight Node. Can be needed in xxxx.getChild().add(Node);
     */
    public Node createTrafficLight(traffic_lights.TrafficLight trafficLight) throws java.io.IOException
    {
        Node nodeTrafficLight;

        traffic_lights.TrafficLightController trafficLightController = new traffic_lights.TrafficLightController(trafficLight);
        FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("trafficLightView.fxml"));
        fxmlLoader.setController(trafficLightController);
        nodeTrafficLight = fxmlLoader.load();

        trafficLight.addObserver(trafficLightController);

        return nodeTrafficLight;
    }




    /**
     * crateGreenPlanet: Create a new node from the greenPlanet
     *
     *
     * @version 1.0
     * @autor   Schweizer Patrick
     * @date    02.01.2018
     * @return  Node: (Node from the greenPlanet)
     */
    public Node crateGreenPlanet() throws java.io.IOException
    {
        Node nodeGreenPlanet = null;

        FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("greenPlanet.fxml"));
        crossroad.GreenPlanetController greenPlanetController = new crossroad.GreenPlanetController();
        fxmlLoader.setController(greenPlanetController);
        nodeGreenPlanet = fxmlLoader.load();

        return nodeGreenPlanet;
    }



    /**
     * setCrossroadLayout: Sets the Layout, Rotation and Scalefactor for the nodes from crossroad
     *
     *
     * @version 1.0
     * @autor   Schweizer Patrick
     * @date    02.01.2018
     * @arg     Pane: (Pane or node from crossroad)
     * @arg     double layoutXOffset, layoutYOffset: (Layoutoffset for place (X/Y) the node into the GUI)
     * @arg     int degree: (Number of Rotation)

     */
    public void setCrossroadLayout(Pane nodeStreetxxDegree, double layoutXOffset, double layoutYOffset, int degree)
    {
        nodeStreetxxDegree.setLayoutX(refPointCrossroadX + layoutXOffset);
        nodeStreetxxDegree.setLayoutY(refPointCrossroadY + layoutYOffset);
        nodeStreetxxDegree.setRotate(degree);
        nodeStreetxxDegree.setScaleX(scaleFactorCrossroad);
        nodeStreetxxDegree.setScaleY(scaleFactorCrossroad);
    }




    /**
     * startConfigurationIsPressed: Store from selected main the configuration.
     *
     * @version 1.0
     * @autor   Schweizer Patrick
     * @date   11.12.2018
     */
    public void startConfigurationIsPressed(HashMap<String, HashMap> settingsForCrossroad)
    {
        try {


        } catch (Exception e) {
            e.printStackTrace();
        }
    }



    /*Driveway East
    DrivewayRouteController drivewayRouteControllerEast = new DrivewayRouteController(drivewayList.get(1), ref, new Point2D(0,0),0);
    crossroadController.getChildren().add(drivewayRouteControllerEast);
    drivewayList.get(1).addObserver(drivewayRouteControllerEast);


    /*Driveway West
    DrivewayRouteController drivewayRouteControllerWest = new DrivewayRouteController(drivewayList.get(2), ref, new Point2D(850,250),180);
    crossroadController.getChildren().add(drivewayRouteControllerWest);
    drivewayList.get(2).addObserver(drivewayRouteControllerWest);



    /*Driveway South
    if (crossroad.getNumberOfDriveways() == 4) {
        DrivewayRouteController drivewayRouteControllerSouth = new DrivewayRouteController(drivewayList.get(3), ref, new Point2D(300, 550), 270);
        crossroadController.getChildren().add(drivewayRouteControllerSouth);
        drivewayList.get(3).addObserver(drivewayRouteControllerSouth);

    }



    vehicles.VehicleController vehicleController = new vehicles.VehicleController(new vehicles.Vehicle(), ref, new Point2D(0,0), 0);
    crossroadController.getChildren().add(vehicleController);




    /* Driveway Route East */
    crossroad.Road drivewayRouteEast = new crossroad.Road(false,false);
    DrivewayRouteController drivewayRouteControllerEast = new DrivewayRouteController(drivewayRouteEast, ref, new Point2D(200,200));
    crossroadController.getChildren().add(drivewayRouteControllerEast);


    /* traffic_lights.TrafficLight */
    traffic_lights.TrafficLight trafficLight = new traffic_lights.TrafficLight(traffic_lights.TrafficLightType.CAR);
    traffic_lights.TrafficLightController trafficLightController = new traffic_lights.TrafficLightController(trafficLight, ref, new Point2D(0,0));
    crossroadController.getChildren().add(trafficLightController);
    trafficLight.setYellowFlash();